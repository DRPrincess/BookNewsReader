apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.south.worker"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"


        manifestPlaceholders = [
                GETUI_APP_ID    : "z9BULgbD4C8aME79ZNvOE3",
                GETUI_APP_KEY   : "zcusvivpDN7TyhC5NUoeZ9",
                GETUI_APP_SECRET: "HHz372Pljo57w0Zl0PCFQ"
        ]
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86_64"
        }

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }

    }


    signingConfigs {
        config {
            storeFile file(project.property('southworker.keystore'))
            storePassword 'southworker666666'
            keyAlias 'southworker'
            keyPassword 'southworker666666'
            v2SigningEnabled false
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
        }
    }
    applicationVariants.all { variant ->

        //修改生成的apk名字 “advisor-release-1.7.0(43)-20151212”
        variant.outputs.each { output ->
            def appName = 'nangong'
            def releaseApkName
            releaseApkName = appName + "-" + variant.buildType.name + "-${defaultConfig.versionName}(${defaultConfig.versionCode})-" + getDate() + ".apk"
            output.outputFileName = releaseApkName
        }
    }
}
//获取时间戳
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //测试
    implementation project(':baselib')
    implementation project(':baseres')

    //UI
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.youth.banner:banner:1.4.9'
    implementation 'com.jaeger.statusbarutil:library:1.4.0'
    implementation 'com.github.jdsjlzx:LRecyclerView:1.5.0'
    implementation 'com.contrarywind:Android-PickerView:3.0.8'
    implementation 'de.hdodenhof:circleimageview:2.2.0'

    //工具类
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation("com.github.hotchemi:permissionsdispatcher:3.2.0") {
        exclude module: "support-v13"
    }
    annotationProcessor "com.github.hotchemi:permissionsdispatcher-processor:3.2.0"

    implementation 'com.getui:sdk:2.12.3.0'

    //图片加载库
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'


}
